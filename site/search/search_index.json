{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"compute/hub/hub_access/hub_access/","title":"Accessing the hub","text":""},{"location":"compute/hub/hub_access/hub_access/#browser","title":"Browser","text":""},{"location":"compute/hub/hub_access/hub_access/#httpsleap2i2ccloudhub","title":"https://leap.2i2c.cloud/hub/","text":"<p>You can access The Hub by visiting <code>https://leap.2i2c.cloud/hub/</code> in your browser. This should bring you to a main menu where you can choose your cloud-compute resources and environment.</p> <p></p>"},{"location":"compute/hub/hub_access/hub_access/#vscode","title":"VSCode","text":"<p>Another option for accessing The hub is connecting with the IDE VSCode.</p>"},{"location":"compute/hub/hub_access/hub_access/#pre-requisites","title":"Pre-requisites","text":"<ul> <li> <p>Register for a LEAP account to use the The hub. Details can be found on the Introduction / Getting Started page.</p> </li> <li> <p>Install websocat on your local machine.   <code>pip install websocat</code> works on Mac OS, and pre-built binaries are available   for all other operating systems.</p> </li> <li> <p>Install VSCode on your local machine.</p> </li> <li> <p>In VSCode, find and install the <code>Remote-SSH</code> and <code>Jupyter</code> extensions from the VSCode Extensions Marketplace.   Remote-SSH will be used to connect to your LEAP Pangeo server, while the Jupyter extension will be used to open .ipynb notebooks and manage the kernel that runs your code on the remote server.</p> </li> </ul> <p></p> <p></p>"},{"location":"compute/hub/hub_access/hub_access/#authentication","title":"Authentication","text":"<p>Note</p> <pre><code>There are two levels of authentication \u2013 your **JupyterHub token** and your **SSH key pair** (public/private). This guide will walk you through both so you can connect with JupyterHub from your VSCode without entering a password.\n</code></pre>"},{"location":"compute/hub/hub_access/hub_access/#jupyterhub-token","title":"JupyterHub token","text":"<p>The JupyterHub token is like a temporary password that lets your local machine talk to the JupyterHub server over a special channel (via websocat).</p> <p>The JupyterHub token will be included in your <code>~/.ssh/config</code> file on your local machine so ssh knows how to talk to the server.</p>"},{"location":"compute/hub/hub_access/hub_access/#ssh-key-pair","title":"SSH key pair","text":"<p>Your SSH key pair is like a secure ID card. Your local machine holds the private key (secret), and the server holds your public key (the badge that proves it trusts you).</p> <p>The SSH public key will be added to your GitHub account for convenience, and then downloaded onto the JupyterHub server (saved into <code>~/.ssh/authorized_keys</code>) so the server knows your local machine is trusted.</p>"},{"location":"compute/hub/hub_access/hub_access/#setup","title":"Setup","text":""},{"location":"compute/hub/hub_access/hub_access/#1-web-browser-start-your-server","title":"1 [Web Browser] Start your server","text":"<p>This setup only works after you start your JupyterHub server. So, start your server! Please keep in mind that even after setting up Remote-SSH on your VSCode, you would have to start your server on LEAP Pangeo before attempting to connect to the server.</p>"},{"location":"compute/hub/hub_access/hub_access/#2-jupyterhub-token-setup","title":"2 JupyterHub Token Setup","text":""},{"location":"compute/hub/hub_access/hub_access/#21-web-browser-obtain-a-jupyterhub-token","title":"2.1 [Web Browser] Obtain a JupyterHub Token","text":"<p>We will need to create a JupyterHub token for authentication.</p> <ol> <li> <p>Go to the JupyterHub control panel. You can access it via <code>File -&gt; Hub control panel</code> in    JupyterLab, or directly going to https://leap.2i2c.cloud/hub/token.</p> </li> <li> <p>In the top bar, select Token.</p> </li> <li> <p>Create a new Token, and keep it safe. Treat this like you would treat a password to your    JupyterHub instance! It is recommended you set an expiry date for this.</p> </li> </ol>"},{"location":"compute/hub/hub_access/hub_access/#21-local-terminal-configure-local-sshconfig-with-the-jupyterhub-token","title":"2.1 [Local Terminal] Configure local <code>~/.ssh/config</code> with the JupyterHub Token","text":"<p>We will set up our ssh config file to tell <code>ssh</code> how to connect to our JupyterHub. Add an entry that looks like this to the end of your <code>~/.ssh/config</code> file (create it if it does not exist).</p> <pre><code>Host leap.2i2c.cloud\n    User jovyan\n    ProxyCommand websocat --binary -H='Authorization: token &lt;YOUR-JUPYTERHUB-TOKEN&gt;' asyncstdio: wss://%h/user/&lt;YOUR-JUPYTERHUB-USERNAME&gt;/sshd/\n</code></pre> <p>replace:</p> <ul> <li><code>&lt;YOUR-JUPYTERHUB-TOKEN&gt;</code> with the token you generated earlier</li> <li><code>&lt;YOUR-JUPYTERHUB-USERNAME&gt;</code> with your jupyterhub username</li> </ul>"},{"location":"compute/hub/hub_access/hub_access/#3-ssh-key-pair-setup","title":"3 SSH Key Pair Setup","text":""},{"location":"compute/hub/hub_access/hub_access/#31-local-terminal-generate-a-ssh-key-pair","title":"3.1 [Local Terminal] Generate a ssh key pair","text":"<ol> <li>Generate the key pair on local terminal by executing the command:</li> </ol> <p><code>ssh-keygen -t ed25519 -C \"your_email@example.com\"</code>    Make sure to replace your_email@example.com with your actual email address.</p> <ol> <li>Add key to ssh-agent by executing:    <code>eval \"$(ssh-agent -s)\"</code> and</li> </ol> <p><code>ssh-add  #~/.ssh/id_ed25519</code></p> <ol> <li>Copy the public key:    Use following command to show the public key on your local machine:    <code>cat ~/.ssh/id_ed25519.pub</code>    And copy the entire key, including the email address.</li> </ol> <p>Do not expose your private key <code>id_ed25519</code> - the private key should not be shared.</p>"},{"location":"compute/hub/hub_access/hub_access/#32-web-browser-save-the-public-key-on-github","title":"3.2 [Web Browser] Save the public key on Github","text":"<ol> <li> <p>Go to Github key settings, then click on \"New SSH Key.\"</p> </li> <li> <p>Paste the copied public key (including email address) into the \"Key\" box, and save. In the next step, we will leverage Github to save your public key on JupyterHub.</p> </li> </ol>"},{"location":"compute/hub/hub_access/hub_access/#33-web-browser-setup-ssh-keys-on-your-jupyterhub-server","title":"3.3 [Web Browser] Setup ssh keys on your JupyterHub server","text":"<ol> <li> <p>Make sure your JupyterHub server is still running. If not, start a new one.</p> </li> <li> <p>Open a terminal in JupyterLab on your web browser</p> </li> <li> <p>Run the following commands:</p> </li> </ol> <pre><code>mkdir -p ~/.ssh\nwget https://github.com/&lt;YOUR-GITHUB-USERNAME&gt;.keys -O ~/.ssh/authorized_keys\nchmod 0600 ~/.ssh/authorized_keys\n</code></pre> <p>replacing <code>&lt;YOUR-GITHUB-USERNAME&gt;</code> with your github username.</p> <ol> <li> <p>Verify that authorized_keys contains your key by running <code>cat ~/.ssh/authorized_keys</code> on the JupyterLab Terminal</p> </li> <li> <p>If it is empty or nonexistent, then create the file authorized_keys in the ~/.ssh/ directory and paste your ssh public key (<code>cat ~/.ssh/id_ed25519.pub</code>, from local terminal) and save file.</p> </li> </ol> <p>With that, we are ready to go!</p>"},{"location":"compute/hub/hub_access/hub_access/#34-local-terminal-try-ssh-ing-into-your-jupyterhub","title":"3.4 [Local Terminal] Try <code>ssh</code>-ing into your JupyterHub!","text":"<p>After all this is setup, you're now able to ssh in! On your local terminal, try:</p> <pre><code>ssh leap.2i2c.cloud\n</code></pre> <p>and it should just work! If configured correctly, <code>leap.2i2c.cloud</code> should not ask you for a password.</p> <p>Debugging Help</p> <pre><code>If you get the error `ssh: connect to host leap.2i2c.cloud port 22: Operation timed out`, then check you have installed websocat by running `run pip install websocat` and confirm that ther config file in the correct directory, `~/.ssh/config`\n</code></pre> <p>If the CLI asks for a password, please verify that your access token and public keys are valid and consistent across platforms and try the previous steps again. Keep in mind this test has to only work once, and it is not necessary to ssh into JupyterHub via CLI once you confirm this works once.</p>"},{"location":"compute/hub/hub_access/hub_access/#5-vscode-connect-to-leap-pangeo-on-vscode","title":"5 [VSCode] Connect to LEAP Pangeo on VSCode","text":"<p>Launch VSCode, click on the top search bar to open the Command Palette (cmd + shift + P on Mac)</p> <ol> <li>Enter <code>&gt;Remote-SSH: Add New SSh Host</code></li> </ol> <p></p> <ol> <li>Enter <code>ssh leap.2i2c.cloud</code></li> </ol> <p></p> <ol> <li>Click on the first option, /Users/\\/.ssh/config <p></p> <ol> <li>Follow further prompts until you are connected. You should see this on your top bar once you are connected.</li> </ol> <p></p> <ol> <li>Click on \"Open Folder\" and select the home directory. You should be able to access your LEAP-Pangeo Notebooks remotely now.</li> </ol> <p></p>"},{"location":"compute/hub/hub_access/hub_access/#6-vscode-write-execute-your-code-via-a-remote-kernel","title":"6 [VSCode] Write / execute your code via a remote kernel","text":"<ol> <li>Once you open a Notebook, you will find a selection menu for a kernel on the top-right.</li> </ol> <ol> <li>Select the option \"Python Environments\"</li> </ol> <ol> <li>Selected the recommended <code>conda (Python 3.x.x)</code> kernel</li> </ol> <p>You should now be good to execute code via remote kernel on the LEAP server from local VSCode!</p>"},{"location":"compute/hub/hub_access/hub_access/#7-vscode-re-connecting-to-remote-ssh-after-setup","title":"7 [VSCode] Re-connecting to Remote SSH After Setup","text":"<ol> <li>Type <code>&gt;Remote-SSH: Connect to Host</code> into the top search bar.</li> </ol> <ol> <li>Select <code>leap.2i2c.cloud</code>. Keep in mind this action will only work if the 2i2c Server is already active.</li> </ol> <ol> <li>Repeat the steps from \"Write / execute your code via a remote kernel\"</li> </ol> <p>Contributors to this documentation:</p> <ol> <li>Yuvi [https://github.com/yuvipanda], jupyter-sshd-proxy:</li> <li>Joe Ko [jk4730@columbia.edu], clarifications on how to setup the local public key</li> <li>Sungjoon Park [sp4050@columbia.edu], whom you can contact for questions regarding this workflow</li> </ol>"},{"location":"data/data_catalog/","title":"The LEAP data catalog","text":"<p>LEAP maintains a catalog of publically-available datasets available via streaming at https://catalog.leap.columbia.edu. The catalog includes data that's been ingested (link) from public sources as well as pointers to data sets maintained by others. The catalog can be viewed by anyone inside or outside of LEAP.</p> <p>Any data ingested with pangeo-forge or whatever we're calling it now is automatically dded to the catalog</p> <p>Data in the catalog can be inspected with the data viewer? We should point to said viewer then.</p> <p>Q: Is some data in our GCS buckets? Then we should note that it's not readable from outside LEAP resources.</p>"},{"location":"edu/bootcamps/","title":"Running Bootcamps","text":"<p>Bootcamp materials in the LEAP-Pangeo bootcamp repository. Please add the materials you develop for your bootcamp to this repo as described below.</p>"},{"location":"edu/bootcamps/#preparing-for-the-bootcamp","title":"Preparing for the bootcamp","text":"<p>Past attendees have suggested that it is very helpful to have the instructor write code from scratch. This ensures the following:</p> <ul> <li>The lecturer takes substantially more time to write live, ensuring that others can follow along.</li> <li>The lecturer is not a superhuman, but also makes mistakes and has to debug code. This is a very important lesson for students to learn, as it is a very common part of the coding process and often not shown in lectures.</li> <li>It also allows the lecturer to explain the code as they write it, which is a very important part of the learning process.</li> </ul> <p>If you are going to use a notebook pre-populated with code, please clear all outputs prior to starting the lecture by right clicking on the notebook and selecting \"Clear All Outputs\".</p>"},{"location":"edu/bootcamps/#materials-for-the-bootcamp","title":"Materials for the bootcamp","text":"<p>We encourage you to reuse materials from past bootcamps and adapt them to your needs. However, in doing so, please do change past materials, but rather create new folders/entries in the following places:</p> <ul> <li> <p>Create a new folder in the \"Codes\" and \"Lectures\" folders and add your materials there. If you are giving the same material as a previous bootcamp, please copy them.   !!! warning   If you are using materials from other sources, like the An Introduction to Earth and Environmental Data Science book. Please just follow the past events structure and link to the original materials.</p> </li> <li> <p>README.md Enter a new entry under the \"Events\" section. This should include an nbgitpuller link for each notebook you work with, so participants can easily pull the materials to their hub (there is a neat tool to generate these links). Please also use the LEAP-Pangeo Hub badge by adding code like this:</p> </li> </ul> <pre><code>[![Open in LEAP-Pangeo Hub](https://custom-icon-badges.demolab.com/badge/Jupyter%20Hub-Launch%20%F0%9F%9A%80-blue?style=for-the-badge&amp;logo=leap-globe)](&lt;generated_link&gt;) \n</code></pre>"},{"location":"edu/bootcamps/#running-the-bootcamp","title":"Running the bootcamp","text":""},{"location":"edu/bootcamps/#prepare-ahead-of-the-event","title":"Prepare ahead of the event","text":"<p>Bootcamp instructors should make sure that they are added to the Bootcamp Instructors Github Team by contacting the data and compute team. This ensures that the people running the bootcamp can perform tasks that might be needed the day of (mostly likely signing up folks who either entered wrong data or did not register ahead of time).</p> <p>Before the event check the following:</p> <ul> <li>Is somebody available to add new data to the Member Data Google Sheet? LEAPs Managing Director has the ability to add data or give others edit access.</li> <li>Can the instructors manually trigger the \"Parse Member Sheet and Add New Members\" action (by clicking on \"Run Workflow&gt;Run Workflow\" in the top right).</li> <li>Double Check that all participants github names are present in the leap-pangeo-base-access team! If folks are in this team they will have access to the hub! If they are not there they either have not accepted the invite to the team (they will be shown as pending invites; tell them to accept the invite as described here) or there is an issue with their github username (check their github handles in the Member Data Google Sheet for typos and completeness). We recommend that you familiarize yourself and test these steps ahead of time.</li> </ul> <p>If you are anticipating many attendees to access the hub at the same time to follow along, it is useful to consult with the  or 2i2c beforehand to ensure a smooth presentation. <p>Data &amp; Compute Team</p> <p>This works the same as Data &amp; Compute Team.</p>"},{"location":"edu/bootcamps/#troubleshooting-during-the-event","title":"Troubleshooting during the event","text":"<p>If students have trouble signing in to the hub, please refer to the FAQ for troubleshooting steps.</p>"},{"location":"edu/bootcamps/#after-the-event","title":"After the event","text":"<p>Please add your versions of the filled notebooks to a subfolder named <code>filled_notebooks</code> in the event folder you created above, so participants and future instructors can access them later.</p>"},{"location":"edu/classes/","title":"Teaching classes using LEAP-Pangeo","text":""},{"location":"edu/classes/#can-i-use-leap-pangeo-for-my-class","title":"Can I use LEAP-Pangeo for my class?","text":"<p>LEAP provides infrastructure support to LEAP-Affiliated Courses.</p> <p>If you are an instructor of a LEAP-Affiliated Course and want your students to access LEAP-Pangeo, contact the Data &amp; Compute Team at least 3 weeks before the class start date in order to coordinate efforts for onboarding.</p>"},{"location":"edu/classes/#preparing-to-teach","title":"Preparing to teach","text":""},{"location":"edu/classes/#class-material","title":"Class Material","text":"<p>We suggest that instructors and teaching assistants preprare class material directly on the hub as much as possible to ensure an identical experience for the students during the class.</p> <p>To develop, edit, and test class material, instructors and teaching assistants should themselves apply for membership under the education category and make sure to check out our LINK TO GETTING STARTED.</p>"},{"location":"edu/classes/#sign-up-students","title":"Sign up students","text":"<p>All students should apply for membership under the education category at least two weeks before the starting date of the class.</p> <p>Important</p> <p>In order to gain access to LEAP-Pangeo, a github account is required. It is free to create one. Please instruct your students to create one before requesting access.</p> <p>Instructors can verify that students have access by checking that their github usernames as listed as members of this github team. We suggest that instructors direct students Getting Started page and ask them to test their access to the Hub before the class starts to avoid any technical interruptions.</p> <p>Make sure to familiarize yourself with the troubleshooting steps below before the start of the class, so that you are prepared to sign up students on the first day if necessary.</p>"},{"location":"edu/classes/#troubleshooting","title":"Troubleshooting","text":""},{"location":"edu/classes/#students-cannot-access-jupyterhub","title":"Students cannot access JupyterHub","text":"<p>Refer students to SIGNUP TROUBLESHOOTING if problems persist. If this does not resolve the issue, please contact the Data &amp; Compute Team.</p>"},{"location":"introduction/getting_started/","title":"Getting started","text":""},{"location":"introduction/getting_started/#registration","title":"Registration.","text":"<p>TODO</p>"},{"location":"introduction/what_is_the_hub/","title":"What is the hub","text":""},{"location":"introduction/what_is_the_hub/#leap-jupyter-hub","title":"LEAP Jupyter-Hub","text":"<p>LEAP provides a JupyterHub (The Hub), which is a shared cloud-based compute environment. This platform gives LEAP researchers a quick and easy access path to working with cloud compute and data. Moving your processing scripts to the cloud allows you to access terrabytes of shared data and the ability to scale your compute well beyond your local laptop.</p>"},{"location":"support/contact/","title":"Contact","text":"<p>The preferred way to contact the Data &amp; Compute Team is via the Slack Workspace LEAP-NSF-STC</p>"},{"location":"support/contact/#ask-a-question-on-the-leap-slack-workspace","title":"Ask a Question on the LEAP Slack Workspace","text":"<ul> <li>Request access to the LEAP Slack by contacting ...</li> <li>Once you are given access, add yourself to relevant channels within the workspace</li> <li>Search these two channels to see if anyone else had similar questions - chances are, the solution to your questions are already here!</li> <li>If issue persists after trying previous solutions, then let us know by posting a new thread and tagging us at <code>@data-and-compute</code>!</li> </ul> <p>Note</p> <p><code>leap-pangeo</code>: channel for non-technical support for LEAP-Pangeo (Questions pertaining to Hub access, Education, etc.) <code>technical_questions</code>: channel for community-wide support on technical issues</p>"},{"location":"technical-reference/file_formats/","title":"File formats","text":"<p>netCDF zaar v2 zarr v3</p>"},{"location":"technical-reference/rclone/","title":"Using <code>rclone</code>","text":"<p><code>rclone</code> is a tool for moving data around. It's useful both for bringing data into LEAP cloud buckets and for moving data around among buckets</p>"}]}